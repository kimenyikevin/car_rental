{
    "openapi": "3.0.0",
    "info": {
      "version": "1.0.0",
      "description": "to be added",
      "title": "Click_invetory"
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    },
    "tags": [
      {
        "name": "user",
        "description": "user Endpoints"
      },
      {
        "name": "project",
        "description": "project Endpoints"
      },
      {
        "name": "contribution",
        "description": "contribution Endpoints"
      },
      {
        "name": "task",
        "description": "task Endpoints"
      },
      {
        "name": "message",
        "description": "message Endpoints"
      }
    ],
    "schemes": [
      "http",
      "https"
    ],
    "paths": {
      "/api/user/signup": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "user Signup",
          "description": "user can sign up for an account",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Signup"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Signed up successfully"
            },
            "409": {
              "description": "Account already exist!"
            },
            "422": {
              "description": "validation error!"
            },
            "500": {
              "description": "SERVER_ERROR"
            }
          }
        }
      },
      "/api/user/login": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "user login",
          "description": "user can login into the app",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/login"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Logged successfully"
            },
            "404": {
              "description": "User not found"
            },
            "400": {
              "description": "Wrong password or email"
            },
            "422": {
              "description": "validation error!"
            },
            "500": {
              "description": "SERVER_ERROR"
            }
          }
        }
      },
    "/api/user/all": {
        "get": {
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "tags": [
            "user"
          ],
          "summary": "Get all users",
          "description": "A logged in user can get/search all users",
          "responses": {
            "200": {
              "description": "All todos/tasks retrieved"
            },
            "401": {
              "description": "AUTHENTICATION_ERROR"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
    },
    "/api/user/download-personalInfo": {
        "get": {
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "tags": [
            "user"
          ],
          "summary": "Download user personal information",
          "description": "A user can download their tasks and projects contributions",
          "responses": {
            "401": {
              "description": "AUTHENTICATION_ERROR"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
    },
    "/api/user/{id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "user"
        ],
        "summary": "Get a single user",
        "description": "A user get a single user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "user Id",
            "required": true,
            "example": "622709d12c9ac2b4141a218f"
          }
        ],
        "responses": {
          "200": {
            "description": "user fetched successfully"
          },
          "404": {
            "description": "User not found"
          },
          "401": {
            "description": "AUTHENTICATION_ERROR"
          },
          "500": {
            "description": "SERVER_ERROR"
          }
        }
      }
    },
    "/api/user/change-password": {
        "put": {
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "tags": [
            "user"
          ],
          "summary": "change password",
          "description": "User can change their password",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "oldPassword": {
                      "type": "string",
                      "description": "your old password",
                      "example": "Rashford!0"
                    },
                    "newPassword": {
                      "type": "string",
                      "description": "Password with uppercase,lowercase,number,special character and length above or equal to 6",
                      "example": "Password!0"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Password changed correctly"
            },
            "400": {
                "description": "Wrong old password or bad request"
              },
            "401": {
              "description": "AUTHENTICATION_ERROR"
            },
            "422": {
                "description": "validation error!"
              },
            "500": {
              "description": "SERVER_ERROR"
            }
          }
        }
      },
    "/api/user/change-profilePicture": {
        "put": {
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "tags": [
            "user"
          ],
          "summary": "change profile picture",
          "description": "User can change their profile picture",
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties":{
                    "image": {
                      "type": "string",
                      "description": "upload the profile image, it has to be png, jpeg not more than 2mb",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Profile Picture changed correctly"
            },
            "401": {
              "description": "AUTHENTICATION_ERROR"
            },
            "422": {
                "description": "validation error!"
              },
            "500": {
              "description": "SERVER_ERROR"
            }
          }
        }
      },
      "/api/project/add": {
        "post": {
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "tags": [
            "project"
          ],
          "summary": "new project",
          "description": "user adds new project",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/newProject"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Project added successfully"
            },
            "401": {
              "description": "AUTHENTICATION_ERROR"
            },
            "409": {
              "description": "Project already exist!"
            },
            "500": {
              "description": "SERVER_ERROR"
            }
          }
        }
      },
      "/api/project/all": {
        "get": {
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "tags": [
            "project"
          ],
          "summary": "Get all user's projects",
          "description": "A logged in user can all his own projects and those they contribute to",
          "responses": {
            "200": {
              "description": "Projects fetched successfully!"
            },
            "401": {
              "description": "AUTHENTICATION_ERROR"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
    },
    "/api/project/tasks": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "project"
        ],
        "summary": "Get all Tasks for a project",
        "description": "A logged in user can get all tasks for a given project",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "type": "string",
            "description": "Project Id",
            "required": true,
            "example": "62385c8e5be86e1cc2414b83"
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks fetched successfully!"
          },
          "401": {
            "description": "AUTHENTICATION_ERROR"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
  },
    "/api/project/{projectId}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "project"
        ],
        "summary": "Get a single project",
        "description": "A logged in user can get a single project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "description": "Project Id",
            "required": true,
            "example": "62385c8e5be86e1cc2414b83"
          }
        ],
        "responses": {
          "200": {
            "description": "Projects fetched successfully!"
          },
          "401": {
            "description": "AUTHENTICATION_ERROR"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "task"
        ],
        "summary": "update status of a project",
        "description": "A logged in user can update the status of their given project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "type": "string",
            "description": "project Id",
            "required": true,
            "example": "623b31911da44afa325081cf"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "description": "The status you want to set the project to",
            "required": true,
            "example": "completed"
          }
        ],
        "responses": {
          "200": {
            "description": "Project status updated successfully"
          },
          "404": {
            "description": "Project Not Found"
          },
          "401": {
            "description": "AUTHENTICATION_ERROR"
          },
          "409": {
            "description": "Project has incomplete tasks, please complete them before completing the project"
          },
          "403": {
            "description": "You are not the owner of this project"
          },
          "500": {
            "description": "SERVER_ERROR"
          }
        }
      }
  },
    "/api/contribution/add": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "contribution"
        ],
        "summary": "new contribution invite",
        "description": "project owner sends invitation to user to contribute to project",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/newContribution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contributor invitation sent successfully"
          },
          "401": {
            "description": "AUTHENTICATION_ERROR"
          },
          "409": {
            "description": "Contributor already exist!"
          },
          "500": {
            "description": "SERVER_ERROR"
          }
        }
      }
    },
    "/api/contribution/verify": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "contribution"
        ],
        "summary": "verification or acceptance of the invitation",
        "description": "The inivited contributor shall accept the invitation to contribute",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "type": "string",
            "description": "Token string sent in email",
            "required": true,
            "example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJjb250cmlidXRvciI6IjYyMzg0Y2ZmM2Y3ZDMxNTM5Mzc1M2M5NCIsInByb2plY3QiOiI2MjNiMzE5MTFkYTQ0YWZhMzI1MDgxY2YiLCJpYXQiOjE2NDgwNDY1ODYsImV4cCI6MTY0ODA4OTc4Nn0.fjKHgaE62ZpGXSl_6bOugGP_julx2uDGFBMyC5q2kto"
          }
        ],
        "responses": {
          "201": {
            "description": "Contributor added successfully"
          },
          "401": {
            "description": "AUTHENTICATION_ERROR"
          },
          "400": {
            "description": "Contributor already exist!"
          },
          "500": {
            "description": "SERVER_ERROR"
          }
        }
      }
    },
    "/api/contribution/{projectId}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "contribution"
        ],
        "summary": "Get contributors of a project",
        "description": "A logged in user can fetch all contributors of a given project",
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "type": "string",
            "description": "Project Id",
            "required": true,
            "example": "624021594fc2d420d65b7340"
          }
        ],
        "responses": {
          "200": {
            "description": "Contributors fetched successfully!"
          },
          "401": {
            "description": "AUTHENTICATION_ERROR"
          },
          "500": {
            "description": "SERVER_ERROR"
          }
        }
      }
    },
    "/api/task/add": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "task"
        ],
        "summary": "new task",
        "description": "A logged in user can add a new task to a project",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "type": "string",
            "description": "Id for the project you want to add task to",
            "required": true,
            "example": "62385c8e5be86e1cc2414b83"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/newTask"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task added successfully"
          },
          "401": {
            "description": "AUTHENTICATION_ERROR"
          },
          "409": {
            "description": "Task already exist!"
          },
          "404": {
            "description": "Project Not Found"
          },
          "500": {
            "description": "SERVER_ERROR"
          }
        }
      }
    },
    "/api/task/all": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "task"
        ],
        "summary": "Get all own tasks",
        "description": "A logged in user can fetch all their own tasks",
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "type": "string",
            "description": "Id for the project whose task we want to fetch",
            "required": true,
            "example": "62385c8e5be86e1cc2414b83"
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks fetched successfully!"
          },
          "401": {
            "description": "AUTHENTICATION_ERROR"
          },
          "500": {
            "description": "SERVER_ERROR"
          }
        }
      }
    },
    "/api/task/{id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "task"
        ],
        "summary": "Get single task",
        "description": "A logged in user can fetch a given single task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "task Id",
            "required": true,
            "example": "624457f0492ecb8beb85896e"
          }
        ],
        "responses": {
          "200": {
            "description": "task fetched successfully!"
          },
          "404": {
            "description": "Task Not Found"
          },
          "401": {
            "description": "AUTHENTICATION_ERROR"
          },
          "500": {
            "description": "SERVER_ERROR"
          }
        }
      },
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "task"
        ],
        "summary": "update status of a task",
        "description": "A logged in user can update the status of a given single task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "task Id",
            "required": true,
            "example": "624c02bdedcb6e5a3f0816db"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "description": "The status you want to set the task to",
            "required": true,
            "example": "done"
          }
        ],
        "responses": {
          "200": {
            "description": "Task status updated successfully"
          },
          "404": {
            "description": "Task Not Found"
          },
          "401": {
            "description": "AUTHENTICATION_ERROR"
          },
          "403": {
            "description": "You are not the owner of this task"
          },
          "500": {
            "description": "SERVER_ERROR"
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "task"
        ],
        "summary": "delete single task",
        "description": "A logged in user can delete an own single task",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "task Id",
            "required": true,
            "example": "62446a2ec8208e864ddeff86"
          }
        ],
        "responses": {
          "200": {
            "description": "task deleted successfully"
          },
          "404": {
            "description": "Task Not Found"
          },
          "403": {
            "description": "You are not the owner of this task"
          },
          "401": {
            "description": "AUTHENTICATION_ERROR"
          },
          "500": {
            "description": "SERVER_ERROR"
          }
        }
      }
    },
    "/api/message/all": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "tags": [
          "message"
        ],
        "summary": "Get all room's messages",
        "description": "users in chat rooms can get all messages in that chat room",
        "parameters": [
          {
            "name": "roomId",
            "in": "query",
            "type": "string",
            "description": "room Id which is the projectId",
            "required": true,
            "example": "624d5582dafae7f41a428751"
          }
        ],
        "responses": {
          "200": {
            "description": "Messages fetched successfully!"
          },
          "401": {
            "description": "AUTHENTICATION_ERROR"
          },
          "500": {
            "description": "SERVER_ERROR"
          }
        }
      }
    }
},
    "definitions": {
        "Signup": {
          "required": [
            "email",
            "password",
            "username",
            "fullName",
            "phone"
          ],
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "your email",
              "example": "rashford@gmail.com"
            },
            "username": {
              "type": "string",
              "description": "username must be between 3 and 25 characters with no special character except _ and .",
              "example": "man_utd"
            },
            "fullName": {
              "type": "string",
              "description": "your fullName",
              "example": "Marcus Rashford"
            },
            "phone": {
              "type": "string",
              "description": "your Rwandan phone number starting with 250",
              "example": "250788888888"
            },
            "password": {
              "type": "string",
              "description": "Password with uppercase,lowercase,number,special character and length above or equal to 6",
              "example": "Password!0"
            }
          }
        },
        "login": {
          "required": [
            "account",
            "password"
          ],
          "type": "object",
          "properties": {
            "account": {
              "type": "string",
              "description": "your email or your username",
              "example": "rashford@gmail.com"
            },
            "password": {
              "type": "string",
              "description":"your password",
              "example": "Password!0"
            }
          }
        },
        "newProject": {
          "required": [
            "name",
            "description",
            "status"
          ],
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the project",
              "example": "Netflix clone"
            },
            "description": {
              "type": "string",
              "description": "Clone of a video streaming platform",
              "example": "man_utd"
            },
            "status": {
              "type": "string",
              "description": "Status of the project",
              "example": "Completed"
            }
          }
        },
        "newContribution": {
          "required": [
            "project",
            "contributor",
            "contributorEmail",
            "projectName"
          ],
          "type": "object",
          "properties": {
            "project": {
              "type": "string",
              "description": "The ID of the project",
              "example": "624021594fc2d420d65b7340"
            },
            "contributor": {
              "type": "string",
              "description": "The ID of the contributor",
              "example": "62384cff3f7d315393753c94"
            },
            "contributorEmail": {
              "type": "string",
              "description": "The contributor's email where email will be sent",
              "example": "harsenemerci@gmail.com"
            },
            "projectName": {
              "type": "string",
              "description": "The name of the project",
              "example": "Netflix clone"
            }
          }
        },
        "newTask": {
          "required": [
            "taskName",
            "description",
            "project"
          ],
          "type": "object",
          "properties": {
            "taskName": {
              "type": "string",
              "description": "The name you gave to the task",
              "example": "User authentication"
            },
            "description": {
              "type": "string",
              "description": "Summary about that task",
              "example": "implementing user authentication using jwt" 
            }
          }
        }
  }
}
